apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    description: Stores clones of repositories to perform Git operations.
  labels:
    deploy: sourcegraph
  name: gitserver
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: gitserver
  serviceName: gitserver
  template:
    metadata:
      labels:
        app: gitserver
        group: backend
        type: gitserver
    spec:
      containers:
        - args:
            - run
          image: 'index.docker.io/sourcegraph/gitserver:3.15.1@sha256:d2e5c67a5005342421326e22ed1d8a8d4e9699e75d294860f3c7ea209528a8f3'
          livenessProbe:
            initialDelaySeconds: 5
            tcpSocket:
              port: rpc
            timeoutSeconds: 5
          name: gitserver
          ports:
            - containerPort: 3178
              name: rpc
          resources:
            limits:
              cpu: '4'
              memory: '8G'
            requests:
              cpu: '4'
              memory: '8G'
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /data/repos
              name: repos
        - args:
            - '--reporter.grpc.host-port=jaeger-collector:14250'
            - '--reporter.type=grpc'
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          image: 'sourcegraph/jaeger-agent:3.15.0@sha256:dc476845a723dce8e44ce07a50b5abb218ec86cb9d75b0ca9601df76db1fb65b'
          name: jaeger-agent
          ports:
            - containerPort: 5775
              protocol: UDP
            - containerPort: 5778
              protocol: TCP
            - containerPort: 6831
              protocol: UDP
            - containerPort: 6832
              protocol: UDP
          resources:
            limits:
              cpu: '1'
              memory: '500M'
            requests:
              cpu: '100m'
              memory: '100M'
      securityContext:
        runAsUser: 0
      volumes:
        - name: repos
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: repos
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: '200Gi'
        storageClassName: sourcegraph
