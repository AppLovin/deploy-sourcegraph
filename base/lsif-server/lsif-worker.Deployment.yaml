apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: The workers that process LSIF uploads.
  labels:
    deploy: sourcegraph
  name: lsif-worker
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: lsif-worker
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: lsif-worker
    spec:
      containers:
      - env:
        - name: LSIF_NUM_SERVERS
          value: '0'
        - name: LSIF_NUM_WORKERS
          value: '4'
        - name: LSIF_STORAGE_ROOT
          value: /lsif-storage
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: sourcegraph/lsif-server:efritz-dev-temp2 # index.docker.io/sourcegraph/lsif-server:3.13.2@sha256:27d6f82702cd770d02de57a8a74b8b1f338ee3de53eb3979bd2a06f12216bf7e
        terminationMessagePolicy: FallbackToLogsOnError
        name: lsif-worker
        livenessProbe:
          httpGet:
            path: /healthz
            port: worker
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: worker
            scheme: HTTP
          periodSeconds: 5
          timeoutSeconds: 5
        ports:
        - containerPort: 3187
          name: worker
        - containerPort: 9090
          name: prometheus
        resources:
          limits:
            cpu: "2"
            memory: 2G
          requests:
            cpu: 500m
            memory: 500M
        volumeMounts:
        - mountPath: /lsif-storage
          name: lsif-storage
        securityContext:
          runAsUser: 100
          runAsGroup: 100
      securityContext:
        fsGroup: 100
      volumes:
      - name: lsif-storage
        persistentVolumeClaim:
          claimName: lsif-server
